/*! ng-catwalk by Adam Timberlake <adam.timberlake@gmail.com> created on 2014-06-30 */
!function(a,b){"use strict";var c=a.module("ngCatwalk",["ngCrossfilter"]),d=function(a){throw"ngCatwalk: "+a+"."},e={any:function(b){return function(c){return null===c?null:a.isDefined(c)?c:b}},autoIncrement:function(){var a=0;return function(){return++a}},custom:function(a){return function(b){return a(b)}},number:function(b){return function(c){return null===c?null:a.isDefined(c)?+c:b}},string:function(b){return function(c){return null===c?b||null:a.isDefined(c)?String(c):b}}},f={One:function(a){this.getOptions=function(){return a}},Many:function(a){this.getOptions=function(){return a}}};c.service("catwalk",["$rootScope","$q","$interpolate","Crossfilter",function(c,g,h,i){function j(){this._collections={},this._relationships={},this._relationshipStore={}}return j.prototype={attribute:e,relationship:{hasOne:function(a){return new f.One(a)},hasMany:function(a){return new f.Many(a)}},_primaryName:"_catwalkId",_relationshipStore:{},_relationships:{},_silent:!1,_eventName:"catwalk/{{type}}/{{collection}}",_relationshipName:"{{localCollection}}/{{localProperty}}/{{foreignCollection}}/{{foreignProperty}}",_collections:{},collection:function(a,b){if(this._collections[a]||(this._collections[a]=new i([])),b){b[this._primaryName]=this.attribute.number(),this._collections[a].primaryKey(this._primaryName),this._collections[a].blueprint=b,this._collections[a].index=0;for(var c in b)b.hasOwnProperty(c)&&this._collections[a].addDimension(c)}return this._collections[a]},silently:function(a){this._silent=!0,a.apply(this),this._silent=!1},createModel:function(a,b){b=this.cleanModel(a,b),this.collection(a).addModel(b);var c=this.createPromise(a,"create",[b]);return c.then(this.resolveCreateModel(a,b).bind(this)),c.catch(this.rejectCreateModel(a,b).bind(this)),b},rejectCreateModel:function(a,b){return function(){this.silently(function(){this.collection(a).deleteModel(b)})}},resolveCreateModel:function(b,c){return function(d){var e=this.collection(b).blueprint;this._propertyIterator(d,function(b){var f=e[b];a.isDefined(f)&&(c[b]=f(d[b]))})}},deleteModel:function(a,b){this.collection(a).deleteModel(b);var c=this.createPromise(a,"delete",[b]);return c.catch(this.rejectDeleteModel(a,b).bind(this)),this.flushRelationships(a,b),b},rejectDeleteModel:function(a,b){return function(){this.silently(function(){this.collection(a).restoreModel(b)})}},createPromise:function(a,b,d){var e=g.defer();Array.isArray(d)||(d=d?[d]:[]),d.unshift(e);var f=h(this._eventName)({type:b,collection:a});return c.$broadcast(f,d[0],d[1],d[2]),e.promise},createRelationship:function(b,c,d){var e=this.collection(b),f=e.blueprint[d],g=f.getOptions(),i=this.collection(g.collection),j=this._relationshipStore,k=c[this._primaryName];(function(){var a={localCollection:b,localProperty:d,foreignCollection:g.collection,foreignProperty:g.foreignKey},c=h(this._relationshipName)(a);this._relationships[c]=a}).bind(this)(),function(){a.isDefined(j[b])||(j[b]={}),a.isDefined(j[b][k])||(j[b][k]={})}();var l="throwRelationshipException";switch(this.getRelationshipType(b,d)){case"One":l="createHasOneRelationship";break;case"Many":l="createHasManyRelationship"}this[l](b,c,d,i,g.foreignKey)},flushRelationships:function(a,b){this._propertyIterator(this._relationships,function(c){var d=this._relationships[c];if(d.foreignCollection===a)for(var e=b[d.foreignProperty],f=this.collection(d.localCollection),g=this.getRelationshipType(d.localCollection,d.localProperty),h=0;h<f.length;h++)switch(g){case"Many":f[h][d.localProperty].remove(e);break;case"One":f[h][d.localProperty]=""}})},throwRelationshipException:function(){d("Congratulations! You managed to create an invalid relationship")},createHasOneRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||"",b.defineProperty(c,d,{get:function(){e.filterBy(f,h[a][g][d]);var b=e[0];return e.unfilterAll(),b||"Adam"},set:function(b){h[a][g][d]=b}})},createHasManyRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||[];var i=function(a,b){return-1!==a.indexOf(b)};b.defineProperty(c,d,{get:function(){e.filterBy(f,h[a][g][d],i);var b=e.collection(1/0);return e.unfilterAll(),b.add=function(c){b.has(c)||h[a][g][d].push(c)},b.remove=function(b){var c=h[a][g][d].indexOf(b);-1!==c&&h[a][g][d].splice(c,1)},b.clear=function(){h[a][g][d]=[]},b.has=function(b){return-1!==h[a][g][d].indexOf(b)},b},set:function(b){-1===h[a][g][d].indexOf(b)&&h[a][g][d].push(b)}})},cleanModel:function(b,c){var d=this._primaryName,e=this.collection(b).blueprint,f=this._propertyIterator,g=this.getRelationshipType.bind(this),h=this.createRelationship.bind(this);return c[d]=++this.collection(b).index,function(){f(c,function(a){e.hasOwnProperty(a)||delete c[a]})}(),function(){f(e,function(f){if(a.isDefined(c[f])||f===d||(c[f]=null),!g(b,f)){var i=e[f];return void(c[f]=i(c[f]))}h(b,c,f)})}(),c},getRelationshipType:function(a,b){var c=this.collection(a).blueprint[b],d={One:f.One,Many:f.Many};for(var e in d)if(d.hasOwnProperty(e)&&c instanceof d[e])return e;return null},_propertyIterator:function(a,b){for(var c in a)a.hasOwnProperty(c)&&b.call(this,c)}},new j}])}(window.angular,window.Object);