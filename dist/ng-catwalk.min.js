/*! ng-catwalk by Adam Timberlake <adam.timberlake@gmail.com> created on 2014-06-30 */
!function(a,b){"use strict";var c=a.module("ngCatwalk",["ngCrossfilter"]),d=function(a){throw"ngCatwalk: "+a+"."},e={any:function(a){return function(b){return null===b?null:"undefined"!=typeof b?b:a}},autoIncrement:function(){var a=0;return function(){return++a}},custom:function(a){return function(b){return a(b)}},number:function(a){return function(b){return null===b?null:"undefined"!=typeof b?+b:a}},string:function(a){return function(b){return null===b?a||null:"undefined"!=typeof b?String(b):a}}},f={One:function(a){this.getOptions=function(){return a}},Many:function(a){this.getOptions=function(){return a}}};c.service("catwalk",["$rootScope","$q","$interpolate","Crossfilter",function(a,c,g,h){function i(){this._collections={},this._relationships={},this._relationshipStore={}}return i.prototype={attribute:e,relationship:{hasOne:function(a){return new f.One(a)},hasMany:function(a){return new f.Many(a)}},_primaryName:"_catwalkId",_relationshipStore:{},_relationships:{},_silent:!1,_eventName:"catwalk/{{type}}/{{collection}}",_relationshipName:"{{localCollection}}/{{localProperty}}/{{foreignCollection}}/{{foreignProperty}}",_collections:{},collection:function(a,b){if(this._collections[a]||(this._collections[a]=new h([])),b){b[this._primaryName]=this.attribute.number(),this._collections[a].primaryKey(this._primaryName),this._collections[a].blueprint=b,this._collections[a].index=0;for(var c in b)b.hasOwnProperty(c)&&this._collections[a].addDimension(c)}return this._collections[a]},silently:function(a){this._silent=!0,a.apply(this),this._silent=!1},createModel:function(a,b){b=this.cleanModel(a,b),this.collection(a).addModel(b);var c=this.createPromise(a,"create",[b]);return c.then(this.resolveCreateModel(a,b).bind(this)),c.catch(this.rejectCreateModel(a,b).bind(this)),b},rejectCreateModel:function(a,b){return function(){this.silently(function(){this.collection(a).deleteModel(b)})}},resolveCreateModel:function(a,b){return function(c){var d=this.collection(a).blueprint;this._propertyIterator(c,function(a){var e=d[a];"undefined"!=typeof e&&(b[a]=e(c[a]))})}},updateModel:function(){},resolveUpdateModel:function(){},rejectUpdateModel:function(){},deleteModel:function(a,b){this.collection(a).deleteModel(b);var c=this.createPromise(a,"delete",[b]);return c.then(this.resolveDeleteModel(a,b).bind(this)),c.catch(this.rejectDeleteModel(a,b).bind(this)),this.flushRelationships(a,b),b},resolveDeleteModel:function(){return function(){}},rejectDeleteModel:function(a,b){return function(){this.silently(function(){this.collection(a).restoreModel(b)})}},createPromise:function(b,d,e){var f=c.defer();Array.isArray(e)||(e=e?[e]:[]),e.unshift(f);var h=g(this._eventName)({type:d,collection:b});return a.$broadcast(h,e[0],e[1],e[2]),f.promise},createRelationship:function(a,b,c){var d=this.collection(a),e=d.blueprint[c],f=e.getOptions(),h=this.collection(f.collection),i=this._relationshipStore,j=b[this._primaryName];(function(){var b={localCollection:a,localProperty:c,foreignCollection:f.collection,foreignProperty:f.foreignKey},d=g(this._relationshipName)(b);this._relationships[d]=b}).bind(this)(),function(){"undefined"==typeof i[a]&&(i[a]={}),"undefined"==typeof i[a][j]&&(i[a][j]={})}();var k="throwRelationshipException";switch(this.getRelationshipType(a,c)){case"One":k="createHasOneRelationship";break;case"Many":k="createHasManyRelationship"}this[k](a,b,c,h,f.foreignKey)},flushRelationships:function(a,b){this._propertyIterator(this._relationships,function(c){var d=this._relationships[c];if(d.foreignCollection===a)for(var e=b[d.foreignProperty],f=this.collection(d.localCollection),g=this.getRelationshipType(d.localCollection,d.localProperty),h=0;h<f.length;h++)switch(g){case"Many":f[h][d.localProperty].remove(e);break;case"One":f[h][d.localProperty]=""}})},throwRelationshipException:function(){d("Congratulations! You managed to create an invalid relationship")},createHasOneRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||"",b.defineProperty(c,d,{get:function(){e.filterBy(f,h[a][g][d]);var b=e[0];return e.unfilterAll(),b},set:function(b){h[a][g][d]=b}})},createHasManyRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||[];var i=function(a,b){return-1!==a.indexOf(b)};b.defineProperty(c,d,{get:function(){e.filterBy(f,h[a][g][d],i);var b=e.collection(1/0);return e.unfilterAll(),b.add=function(c){b.has(c)||h[a][g][d].push(c)},b.remove=function(b){var c=h[a][g][d].indexOf(b);-1!==c&&h[a][g][d].splice(c,1)},b.has=function(b){return-1!==h[a][g][d].indexOf(b)},b},set:function(b){-1===h[a][g][d].indexOf(b)&&h[a][g][d].push(b)}})},cleanModel:function(a,b){var c=this._primaryName,d=this.collection(a).blueprint,e=this._propertyIterator,f=this.getRelationshipType.bind(this),g=this.createRelationship.bind(this);return b[c]=++this.collection(a).index,function(){e(b,function(a){d.hasOwnProperty(a)||delete b[a]})}(),function(){e(d,function(e){if("undefined"==typeof b[e]&&e!==c&&(b[e]=null),!f(a,e)){var h=d[e];return void(b[e]=h(b[e]))}g(a,b,e)})}(),b},getRelationshipType:function(a,b){var c=this.collection(a).blueprint[b],d={One:f.One,Many:f.Many};for(var e in d)if(d.hasOwnProperty(e)&&c instanceof d[e])return e;return null},_propertyIterator:function(a,b){for(var c in a)a.hasOwnProperty(c)&&b.call(this,c)}},new i}])}(window.angular,window.Object);