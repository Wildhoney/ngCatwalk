/*! ng-catwalk by Adam Timberlake <adam.timberlake@gmail.com> created on 2014-07-01 */
!function(a,b){"use strict";var c=a.module("ngCatwalk",["ngCrossfilter"]),d=function(a){throw"ngCatwalk: "+a+"."},e={any:function(b){return function(c){return null===c?null:a.isDefined(c)?c:b}},autoIncrement:function(){var a=0;return function(){return++a}},custom:function(a){return function(b){return a(b)}},number:function(b){return function(c){return null===c?null:a.isDefined(c)?+c:b}},string:function(b){return function(c){return null===c?b||null:a.isDefined(c)?String(c):b}}},f={TYPES:{ONE:"One",MANY:"Many"},One:function(a){this.getOptions=function(){return a}},Many:function(a){this.getOptions=function(){return a}}};c.service("catwalk",["$rootScope","$q","$interpolate","Crossfilter",function(c,g,h,i){function j(){this._collections={},this._relationships={},this._relationshipStore={}}return j.prototype={attribute:e,relationship:{hasOne:function(a){return new f[f.TYPES.ONE](a)},hasMany:function(a){return new f[f.TYPES.MANY](a)}},_primaryName:"_catwalkId",_relationshipStore:{},_relationships:{},_silent:!1,_eventName:"catwalk/{{type}}/{{collection}}",_relationshipName:"{{localCollection}}/{{localProperty}}/{{foreignCollection}}/{{foreignProperty}}",_collections:{},collection:function(a,b){return this._collections[a]||(this._collections[a]=new i([])),b&&(b[this._primaryName]=this.attribute.number(),this._collections[a].primaryKey(this._primaryName),this._collections[a].blueprint=b,this._collections[a].index=0,this._propertyIterator(b,function(b){this._collections[a].addDimension(b)})),this._collections[a]},silently:function(a){this._silent=!0,a.apply(this),this._silent=!1},createModel:function(a,b){b=this.cleanModel(a,b),this.collection(a).addModel(b);var c=this.createPromise(a,"create",[b]);return c.then(this.resolveCreateModel(a,b).bind(this)),c.catch(this.rejectCreateModel(a,b).bind(this)),b},rejectCreateModel:function(a,b){return function(){this.silently(function(){this.collection(a).deleteModel(b)})}},resolveCreateModel:function(b,c){return function(d){var e=this.collection(b).blueprint;this._propertyIterator(d,function(b){var f=e[b];a.isDefined(f)&&(c[b]=f(d[b]))})}},updateModel:function(b,c,d){var e=this.collection(b).blueprint,f={};this._propertyIterator(d,function(g){this.getRelationshipType(b,g)||a.isDefined(e[g])&&(f[g]=c[g],c[g]=d[g])});var g=this.createPromise(b,"update",[c]);return g.then(this.resolveUpdateModel(b,c,f).bind(this)),g.catch(this.rejectUpdateModel(b,c,f).bind(this)),c},resolveUpdateModel:function(a,b,c){return function(){this.pruneRelationships(a,c)}},rejectUpdateModel:function(a,b,c){return function(){this._propertyIterator(c,function(a){b[a]=c[a]})}},deleteModel:function(a,b){this.collection(a).deleteModel(b);var c=this.createPromise(a,"delete",[b]);return c.catch(this.rejectDeleteModel(a,b).bind(this)),this.pruneRelationships(a,b),b},rejectDeleteModel:function(a,b){return function(){this.silently(function(){this.collection(a).restoreModel(b)})}},createPromise:function(a,b,d){var e=g.defer();Array.isArray(d)||(d=d?[d]:[]),d.unshift(e);var f=h(this._eventName)({type:b,collection:a});return c.$broadcast(f,d[0],d[1],d[2]),e.promise},createRelationship:function(b,c,d){var e=this.collection(b),g=e.blueprint[d],i=g.getOptions(),j=this.collection(i.collection),k=this._relationshipStore,l=c[this._primaryName];(function(){var a={localCollection:b,localProperty:d,foreignCollection:i.collection,foreignProperty:i.foreignKey},c=h(this._relationshipName)(a);this._relationships[c]=a}).bind(this)(),function(){a.isDefined(k[b])||(k[b]={}),a.isDefined(k[b][l])||(k[b][l]={})}();var m="throwRelationshipException";switch(this.getRelationshipType(b,d)){case f.TYPES.ONE:m="createHasOneRelationship";break;case f.TYPES.MANY:m="createHasManyRelationship"}this[m](b,c,d,j,i.foreignKey)},pruneRelationships:function(a,b){this._propertyIterator(this._relationships,function(c){var d=this._relationships[c];if(d.foreignCollection===a)for(var e=b[d.foreignProperty],g=this.collection(d.localCollection),h=this.getRelationshipType(d.localCollection,d.localProperty),i=0;i<g.length;i++)switch(h){case f.TYPES.ONE:g[i][d.localProperty]="";break;case f.TYPES.MANY:g[i][d.localProperty].remove(e)}})},throwRelationshipException:function(){d("Congratulations! You managed to create an invalid relationship")},createHasOneRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||"",b.defineProperty(c,d,{get:function(){e.filterBy(f,h[a][g][d]);var b=e[0];return e.unfilterAll(),b},set:function(b){h[a][g][d]=b}})},createHasManyRelationship:function(a,c,d,e,f){var g=c[this._primaryName],h=this._relationshipStore;h[a][g][d]=c[d]||[];var i=h[a][g][d],j=function(a,b){return-1!==a.indexOf(b)};b.defineProperty(c,d,{get:function(){e.filterBy(f,i,j);var a=e.collection(1/0);return e.unfilterAll(),a.add=function(b){a.has(b)||i.push(b)},a.remove=function(a){var b=i.indexOf(a);-1!==b&&i.splice(b,1)},a.clear=function(){i=[]},a.has=function(a){return-1!==i.indexOf(a)},a},set:function(a){-1===i.indexOf(a)&&i.push(a)}})},cleanModel:function(b,c){var d=this._primaryName,e=this.collection(b).blueprint,f=this._propertyIterator,g=this.getRelationshipType.bind(this),h=this.createRelationship.bind(this);return c[d]=++this.collection(b).index,function(){f(c,function(a){e.hasOwnProperty(a)||delete c[a]})}(),function(){f(e,function(f){if(a.isDefined(c[f])||f===d||(c[f]=null),!g(b,f)){var i=e[f];return void(c[f]=i(c[f]))}h(b,c,f)})}(),c},getRelationshipType:function(a,b){var c=this.collection(a).blueprint[b],d={};d[f.TYPES.ONE]=f.One,d[f.TYPES.MANY]=f.Many;for(var e in d)if(d.hasOwnProperty(e)&&c instanceof d[e])return e;return null},_propertyIterator:function(a,b){for(var c in a)a.hasOwnProperty(c)&&b.call(this,c)}},new j}])}(window.angular,window.Object);